version: "2"
services:
  # base image shared by almost all images
  # let's ensure it's built
  base:
    build:
      context: .
      dockerfile: Dockerfile.base
    image: django-container-base:latest
    command: "true"
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    links:
      - uwsgi
    image: django-container-nginx:latest
    volumes:
      - ./static/:/usr/share/nginx/the_project/
    ports:
      - "8000:8000"
  uwsgi:
    build:
      context: .
      dockerfile: Dockerfile.uwsgi
    image: django-container-uwsgi:latest
    links:
      - base
    volumes:
      - .:/opt/app
    environment:
      - POSTGRESQL_DATABASE=the_project
      - POSTGRESQL_USER=the_user
      - POSTGRESQL_PASSWORD=p4$$word
  # this image is meant for development: having shell in the app
  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: django-container-dev:latest
    tty: true
    stdin_open: true
    links:
      - base
    command: bash -l
  db:
    image: praiskup/postgresql:APIv1.0.1-fedora23
    volumes:
      - ./deployment/postgresql/:/usr/share/cont-volume/postgresql/
      - ./db:/var/lib/pgsql/data
    environment:
      - CONT_DEBUG=3
      - POSTGRESQL_DATABASE=the_project
      - POSTGRESQL_USER=the_user
      - POSTGRESQL_PASSWORD=p4$$word
      - POSTGRESQL_CONTAINER_OPTS=clear_pgdata_pidfile = true
  migrator:
    image: django-container-base:latest
    environment:
      - POSTGRESQL_DATABASE=the_project
      - POSTGRESQL_USER=the_user
      - POSTGRESQL_PASSWORD=p4$$word
    volumes:
      - .:/opt/app/
    links:
      - db
    command: bash -c "until ncat -v -w 3 db 5432 ; do sleep 1 ; done && python /opt/app/manage.py makemigrations && exec python /opt/app/manage.py migrate --no-input"
    # TODO: add static collector
